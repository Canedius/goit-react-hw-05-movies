{"version":3,"file":"static/js/ReviesViews.4cc7df94.chunk.js","mappings":"ySAAMA,EAAQC,EAAAA,MAAAA,QACdD,EAAME,SAASC,QAAU,8BACzB,IAAMC,EAAM,mCACL,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEwBN,EAAMO,IAAN,yCAA4CH,IAFpE,cAEOI,EAFP,yBAGQA,EAASC,KAAKC,SAHtB,gCAKCC,QAAQC,MAAR,MALD,gFAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEsBd,EAAMO,IAAN,mBAAsBO,EAAtB,oBAAoCV,IAF1D,cAEKI,EAFL,yBAIMA,EAASC,MAJf,gCAMDE,QAAQC,MAAR,MANC,gFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,gGAEsBd,EAAMO,IAAN,mBAAsBO,EAAtB,4BAA4CV,IAFlE,cAEKI,EAFL,yBAGMA,EAASC,KAAKO,MAHpB,gCAKDL,QAAQC,MAAR,MALC,gFAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,gGAEsBd,EAAMO,IAAN,mBAAsBO,EAAtB,4BAA4CV,IAFlE,cAEKI,EAFL,yBAGMA,EAASC,KAAKC,SAHpB,gCAKDC,QAAQC,MAAR,MALC,gFAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gGAIsBnB,EAAMO,IAAN,kCAAqCH,EAArC,iCAAiEe,EAAjE,gCAJtB,cAIKX,EAJL,QAKaC,KAAKC,QAAQU,OAAS,GALnC,uBAMAC,MAAM,qFANN,mDASMb,EAASC,KAAKC,SATpB,kCAWDC,QAAQC,MAAR,MAXC,mF,6GCnCP,EAAyB,uB,SCSzB,MATA,YACG,OADsB,EAARU,MACDC,KAAI,YAAmC,IAAjCC,EAAgC,EAAhCA,OAAOC,EAAyB,EAAzBA,QAAQX,EAAiB,EAAjBA,GAAGY,EAAc,EAAdA,WAChC,OAAO,qBAASC,UAAWC,EAApB,WACP,wBAAKJ,KACL,uBAAIE,KACJ,uBAAID,MAHsCX,OCWlD,MATA,SAAqBR,GACrB,IAAOuB,GAAWC,EAAAA,EAAAA,IAAW,MAAtBD,QACP,GAAyBE,EAAAA,EAAAA,UAAS,IAAlC,eAAMC,EAAN,KAAaC,EAAb,KAKC,OAJDC,EAAAA,EAAAA,YAAU,YACVjB,EAAAA,EAAAA,IAAgBY,GAASM,KAAKF,KAC5B,CAACJ,IAEKG,EAAOZ,OAAO,GAAE,SAAC,EAAD,CAAQE,MAAOU,KAAU","sources":["services/fetch.js","webpack://react-homework-template/./src/components/Revies/Revies.module.css?0819","components/Revies/Revies.js","views/ReviesViews.jsx"],"sourcesContent":["const axios = require('axios').default;\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst KEY = \"70c5c640dcd47438a9460ce1b8e1a5b1\"\nexport async function getTrending(params) {\n    try {\n        const response = await axios.get(`/3/trending/movie/week?api_key=${KEY}`);\n        return response.data.results;\n      } catch (error) {\n        console.error(error);\n      } \n}\nexport async function getMovieDetails (id) {\n  try {\n      const response = await axios.get(`/3/movie/${id}?api_key=${KEY}`);\n     \n      return response.data;\n    } catch (error) {\n      console.error(error);\n    } \n}\nexport async function getMovieCredits(id) {\n  try {\n      const response = await axios.get(`/3/movie/${id}/credits?api_key=${KEY}`);\n      return response.data.cast;\n    } catch (error) {\n      console.error(error);\n    } \n}\nexport async function getMovieReviews(id) {\n  try {\n      const response = await axios.get(`/3/movie/${id}/reviews?api_key=${KEY}`);\n      return response.data.results;\n    } catch (error) {\n      console.error(error);\n    } \n}\nexport async function getMovie(query) {\n  \n  \n  try {\n      const response = await axios.get(`/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n      if (!response.data.results.length > 0) {\n       alert(\"Фильм не найден \")\n       return\n      }\n      return response.data.results;\n    } catch (error) {\n      console.error(error);\n    } \n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"coment\":\"Revies_coment__HeBaq\"};","import s from \"./Revies.module.css\"\nfunction Revies({array}) {\n   return array.map(({author,content,id,updated_at})=>{\n        return <article className={s.coment} key={id}>\n        <h3>{author}</h3>\n        <b>{updated_at}</b>\n        <p>{content}</p>\n        </article>\n        }) \n}\nexport  default Revies","import {useParams} from \"react-router-dom\"\nimport {getMovieReviews} from \"services/fetch\"\nimport { useEffect,useState } from \"react\"\nimport Revies from \"components/Revies/Revies\"\n\nfunction ReviesViews(params) {\nconst {movieId} = useParams (null)\nconst[revies,setRevies]= useState([])\nuseEffect(()=>{\ngetMovieReviews(movieId).then(setRevies)\n},[movieId])\n\n return revies.length>1?<Revies array={revies}/>:<h3>We don`t have any revies for his movie</h3>\n}\nexport default ReviesViews"],"names":["axios","require","defaults","baseURL","KEY","getTrending","params","get","response","data","results","console","error","getMovieDetails","id","getMovieCredits","cast","getMovieReviews","getMovie","query","length","alert","array","map","author","content","updated_at","className","s","movieId","useParams","useState","revies","setRevies","useEffect","then"],"sourceRoot":""}