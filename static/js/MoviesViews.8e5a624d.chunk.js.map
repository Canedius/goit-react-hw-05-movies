{"version":3,"file":"static/js/MoviesViews.8e5a624d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ListMovie/ListMovie.module.css?c0df","components/ListMovie/ListMovie.jsx","services/fetch.js","webpack://react-homework-template/./src/components/FormBar/FormBar.module.css?9562","components/FormBar/FormBar.jsx","views/MoviesViews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"imgMovie\":\"ListMovie_imgMovie__WkZeF\",\"filmCcardList\":\"ListMovie_filmCcardList__OkSpz\",\"filmCardItem\":\"ListMovie_filmCardItem__NhuBy\",\"film-card__thumb\":\"ListMovie_film-card__thumb__Q+WtV\",\"filmCardTitle\":\"ListMovie_filmCardTitle__SYNQc\",\"link\":\"ListMovie_link__SLxKp\"};","import s from \"./ListMovie.module.css\"\nimport PropTypes from 'prop-types'; // ES6\nimport {Link,useLocation} from \"react-router-dom\"\nfunction ListMovie({films}) {\n    const location = useLocation()\n    const DeafaultImg = \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png\"\n    return films && (\n        <section>\n        <ul className={s.filmCcardList}>\n          {films.map(({id,title,poster_path})=>{\n            const avatar = poster_path ?`https://image.tmdb.org/t/p/w500${poster_path}`:DeafaultImg\n           return <li title={title} className={s.filmCardItem} key={id}>\n             <Link to={`/movies/${id}`} state={{from:location}} className={s.link}> \n            <div>\n                <img className={s.imgMovie}\n                  src={avatar}\n                  alt={title}\n                />\n                <h2 className={s.filmCardTitle}>{title}</h2>\n            </div>\n            </Link>\n        </li>\n        }\n        \n      )}\n        </ul>\n        </section>\n      )\n    \n} \n\nexport  default ListMovie\n\nListMovie.propTypes={\n  films :PropTypes.arrayOf(\n    PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }))\n}","const axios = require('axios').default;\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst KEY = \"70c5c640dcd47438a9460ce1b8e1a5b1\"\nexport async function getTrending(params) {\n    try {\n        const response = await axios.get(`/3/trending/movie/week?api_key=${KEY}`);\n        return response.data.results;\n      } catch (error) {\n        console.error(error);\n      } \n}\nexport async function getMovieDetails (id) {\n  try {\n      const response = await axios.get(`/3/movie/${id}?api_key=${KEY}`);\n     \n      return response.data;\n    } catch (error) {\n      console.error(error);\n    } \n}\nexport async function getMovieCredits(id) {\n  try {\n      const response = await axios.get(`/3/movie/${id}/credits?api_key=${KEY}`);\n      return response.data.cast;\n    } catch (error) {\n      console.error(error);\n    } \n}\nexport async function getMovieReviews(id) {\n  try {\n      const response = await axios.get(`/3/movie/${id}/reviews?api_key=${KEY}`);\n      return response.data.results;\n    } catch (error) {\n      console.error(error);\n    } \n}\nexport async function getMovie(query) {\n  \n  \n  try {\n      const response = await axios.get(`/3/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`);\n      if (!response.data.results.length > 0) {\n       alert(\"Фильм не найден \")\n       return\n      }\n      return response.data.results;\n    } catch (error) {\n      console.error(error);\n    } \n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormBar_form__6RLtO\"};","import s from \"./FormBar.module.css\"\nimport { useState,} from \"react\"\nimport PropTypes from 'prop-types'; // ES6\n\nfunction FormBar({onSubmit}) {\nconst [value,setValue] = useState(\"\")\n\nconst reset = () => {\n    setValue(\"\");\n  };\n  \nconst handleSubmit = e => {\n e.preventDefault();\n if (value.trim() === \"\") {\nreturn alert(`Ведите название запроса`)\n }\n onSubmit(value);\nreset();\n}\n\nconst moviesChange =(e)=>{\n setValue(e.currentTarget.value)\n}\n\n    \n return <>\n <form autoComplete=\"off\" className={s.form} onSubmit={handleSubmit}>\n<input type=\"text\" value={value} placeholder=\"Search movies\"  onChange={moviesChange}/>\n<button type=\"submit\">Search</button>\n </form>\n </>\n}\nexport default FormBar\n\nFormBar.propTypes={\n  onSubmit :PropTypes.func.isRequired\n    \n}","import {} from \"react-router-dom\"\nimport {useState,useEffect} from \"react\"\nimport {useSearchParams} from \"react-router-dom\"\nimport { getMovie } from \"services/fetch\"\nimport ListMovie from \"components/ListMovie/ListMovie\"\nimport FormBar from \"components/FormBar/FormBar\"\n\nfunction MoviesPage() {\n const [movies,setMovies] = useState(null)\n const [searchParams, setSearchParams] = useSearchParams();\n const query = searchParams.get('query')\n\n useEffect(()=>{\n     if (!query) {\n       return\n     }\ngetMovie(query).then(setMovies)\n\n },[query])\n\n\n const onSubmit=(value)=>{\n    setSearchParams({ query: `${value}` });\n }\n \nreturn<>\n    <FormBar onSubmit={onSubmit}/>\n    {movies && <ListMovie films = {movies}/>}\n\n</>\n\n  \n\n}\nexport default MoviesPage"],"names":["films","location","useLocation","className","s","map","id","title","poster_path","avatar","to","state","from","src","alt","axios","require","defaults","baseURL","KEY","getTrending","params","get","response","data","results","console","error","getMovieDetails","getMovieCredits","cast","getMovieReviews","getMovie","query","length","alert","onSubmit","useState","value","setValue","autoComplete","e","preventDefault","trim","type","placeholder","onChange","currentTarget","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","then","ListMovie"],"sourceRoot":""}